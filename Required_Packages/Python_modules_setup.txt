
Windows
=======

En windows, python no viene instalado por defecto, y a pesar de ser posible instalar python y librerías de versiones específicas de librerías manualmente, no es recomendado por el trabajo que implica.

Algunas observaciones:
- Python se puede instalar a nivel de sistema o a nivel de usuario.
- Ej: Algunos programas pueden usar una versión dedicada e interna de Python.
- Es posible instalar muchas versiones de python en un mismo sistema. La versión que se desea mantener disponible para otras aplicaciones debe mantenerse en el path de sistema o del usuario.

Vamos a ofrecer dos posibilidades, utilizando Anaconda y utilizando Python nativamente.

- Se recomienda utilizar Anaconda en el espacio de usuario, es la forma menos invasiva y no requiere permisos de administrador de sistema.
- Anaconda permite la instalación de multiples librerías (python package installer) con versiones que son compatibles entre si.
- Estas librerías son instaladas utilizando versiones ya compiladas (vía el comando "conda"), esto previene un exceso de dependencias que puede costar satisfacer para distintas librerías.
- Anaconda puede manejar distintas versiones de python (Ej: 2.7, 3.6, etc.) y "environments".
- Distintos environments pueden poseer distintas librerías instaladas, dichas liberías pueden ser incluso incompatibles entre si.

Si por determinadas razones, tienen problemas con la instalación de Anaconda, pueden intentar con una instalación de Python nativo. Esto también funcionará, pero el manejo de distintas versiones de python se deberá realizar de forma manual. También se requerirá esfuerzo adicional para mantener dependencias externas a python (archivos .dll). El día de mañana, podrá requerir una nueva librería, que quizá sea incompatible con otra. En otras palabras, al instalar la librería nuevaa, pueden dejar de funcionar sus programas antiguos.


=====================
Forma 1: Anaconda (Recomendado)
=====================

Anaconda Distribution, permite administrar paquetes de python de manera similar a como se realiza en linux.

Primero descargue e instale anaconda python versión 3.7

https://www.anaconda.com/distribution/


Creando un environment
----------------------

Luego, abra "Anaconda Prompt", en dicha terminal creamos un environment ejecutando:

conda create -n python-cg

Luego lo activamos con

conda activate python-cg

Aparecerá (python-cg) al lado izquierdo de su prompt indicando que este es el environment activo. Puede volver al environment base con

conda activate base

Instalando las librerías necesarias
-----------------------------------

Regrese al environment python-cg, una vez ahí ejecute:

pip install numpy scipy matplotlib pyopengl glfw ipython jupyter

Es posible que se le pida actualizar algunas dependencias, ingrese 'y' para aceptar.


=====================
Forma2: Python Nativo (Si el método anterior no funciona)
=====================

Si usted ya tenía Python instalado con Anaconda y tuvo problemas, seguramente se trata de un problema con las variables de entorno. En ese caso, usted querrá desinstalar Python en conjunto con Anaconda. Haga esto manualmente.

Ahora, deberá instalar Python para que se agregue a sus variables de entorno:
 
Descargar e instalar la última versión de Python para Windows desde https://www.python.org/downloads/windows/
OJO: Al instalar Python, marque la opción: Agregar al PATH (o variables de entorno). POR FAVOR NO OLVIDE ESTO. SI LO HACE ¡REINSTALE!

Una vez instalado, asegúrese de que python funciona. Abra alguna terminal de windows (windows-> buscar o ejecutar -> cmd). 

Escribiendo

python

Debería aparecer algo del estilo:

Python 3.7.2(default, Sep 12 2018, 18:26:19)
[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>

Nosotros no queremos estos >>>, pues es para programar en Python (sería bastante incómodo programar en la terminal). Se puede salir de este ambiente escribiendo:

>>>exit()

Así volverá a la terminal normal. Es posible que Python haya instalado el paquete pip, que permite administrar e instalar otros paquetes fácilmente. Para comprobarlo, escriba:

pip

En la terminal. Si se despliega un menú con opciones, está todo bien. Si no figua como algo determinado, deberá instalarlo, para esto hay que ejecutar el módulo get-pip.py (revisar el link https://www.liquidweb.com/kb/install-pip-windows/). Este módulo se puede ejecutar tal como se hacía en el curso de Introducción a la Programación, abriendo el IDLE y corriéndolo.

Ahora sí debería tener pip, proceda a escribir

pip install numpy scipy matplotlib pyopengl glfw ipython jupyter

Y ahora debería poder correr todos los programas normalmente.


